import Popover from"../../src/popover";import EventHandler from"../../src/dom/event-handler";import{clearFixture,getFixture,jQueryMock}from"../helpers/fixture";describe("Popover",(()=>{let e;beforeAll((()=>{e=getFixture()})),afterEach((()=>{clearFixture();const e=document.querySelectorAll(".popover");for(const t of e)t.remove()})),describe("VERSION",(()=>{it("should return plugin version",(()=>{expect(Popover.VERSION).toEqual(jasmine.any(String))}))})),describe("Default",(()=>{it("should return plugin default config",(()=>{expect(Popover.Default).toEqual(jasmine.any(Object))}))})),describe("NAME",(()=>{it("should return plugin name",(()=>{expect(Popover.NAME).toEqual(jasmine.any(String))}))})),describe("DATA_KEY",(()=>{it("should return plugin data key",(()=>{expect(Popover.DATA_KEY).toEqual("bs.popover")}))})),describe("EVENT_KEY",(()=>{it("should return plugin event key",(()=>{expect(Popover.EVENT_KEY).toEqual(".bs.popover")}))})),describe("DefaultType",(()=>{it("should return plugin default type",(()=>{expect(Popover.DefaultType).toEqual(jasmine.any(Object))}))})),describe("show",(()=>{it("should show a popover",(()=>new Promise((t=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o);o.addEventListener("shown.bs.popover",(()=>{expect(document.querySelector(".popover")).not.toBeNull(),t()})),r.show()})))),it("should set title and content from functions",(()=>new Promise((t=>{e.innerHTML='<a href="#">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o,{title:()=>"Bootstrap",content:()=>"loves writing tests （╯°□°）╯︵ ┻━┻"});o.addEventListener("shown.bs.popover",(()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.querySelector(".popover-header").textContent).toEqual("Bootstrap"),expect(e.querySelector(".popover-body").textContent).toEqual("loves writing tests （╯°□°）╯︵ ┻━┻"),t()})),r.show()})))),it("should show a popover with just content without having header",(()=>new Promise((t=>{e.innerHTML='<a href="#">Nice link</a>';const o=e.querySelector("a"),r=new Popover(o,{content:"Some beautiful content :)"});o.addEventListener("shown.bs.popover",(()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.querySelector(".popover-header")).toBeNull(),expect(e.querySelector(".popover-body").textContent).toEqual("Some beautiful content :)"),t()})),r.show()})))),it("should show a popover with just title without having body",(()=>new Promise((t=>{e.innerHTML='<a href="#">Nice link</a>';const o=e.querySelector("a"),r=new Popover(o,{title:"Title which does not require content"});o.addEventListener("shown.bs.popover",(()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.querySelector(".popover-body")).toBeNull(),expect(e.querySelector(".popover-header").textContent).toEqual("Title which does not require content"),t()})),r.show()})))),it("should show a popover with just title without having body using data-attribute to get config",(()=>new Promise((t=>{e.innerHTML='<a href="#" data-bs-content="" title="Title which does not require content">Nice link</a>';const o=e.querySelector("a"),r=new Popover(o);o.addEventListener("shown.bs.popover",(()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.querySelector(".popover-body")).toBeNull(),expect(e.querySelector(".popover-header").textContent).toEqual("Title which does not require content"),t()})),r.show()})))),it("should NOT show a popover without `title` and `content`",(()=>{e.innerHTML='<a href="#" data-bs-content="" title="">Nice link</a>';const t=e.querySelector("a"),o=new Popover(t,{animation:!1}),r=spyOn(EventHandler,"trigger").and.callThrough();o.show(),expect(r).not.toHaveBeenCalledWith(t,Popover.eventName("show")),expect(document.querySelector(".popover")).toBeNull()})),it('"setContent" should keep the initial template',(()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap" data-bs-custom-class="custom-class">BS twitter</a>';const t=e.querySelector("a"),o=new Popover(t);o.setContent({".tooltip-inner":"foo"});const r=o._getTipElement();expect(r).toHaveClass("popover"),expect(r).toHaveClass("bs-popover-auto"),expect(r.querySelector(".popover-arrow")).not.toBeNull(),expect(r.querySelector(".popover-header")).not.toBeNull(),expect(r.querySelector(".popover-body")).not.toBeNull()})),it("should call setContent once",(()=>new Promise((t=>{e.innerHTML='<a href="#">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o,{content:"Popover content"});expect(r._templateFactory).toBeNull();let n=null,c=1;o.addEventListener("hidden.bs.popover",(()=>{r.show()})),o.addEventListener("shown.bs.popover",(()=>{n=n||spyOn(r._templateFactory,"constructor").and.callThrough();const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e.querySelector(".popover-body").textContent).toEqual("Popover content"),expect(n).toHaveBeenCalledTimes(0),c>1&&t(),c++,r.hide()})),r.show()})))),it("should show a popover with provided custom class",(()=>new Promise((t=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap" data-bs-custom-class="custom-class">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o);o.addEventListener("shown.bs.popover",(()=>{const e=document.querySelector(".popover");expect(e).not.toBeNull(),expect(e).toHaveClass("custom-class"),t()})),r.show()}))))})),describe("hide",(()=>{it("should hide a popover",(()=>new Promise((t=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const o=e.querySelector("a"),r=new Popover(o);o.addEventListener("shown.bs.popover",(()=>{r.hide()})),o.addEventListener("hidden.bs.popover",(()=>{expect(document.querySelector(".popover")).toBeNull(),t()})),r.show()}))))})),describe("jQueryInterface",(()=>{it("should create a popover",(()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a");jQueryMock.fn.popover=Popover.jQueryInterface,jQueryMock.elements=[t],jQueryMock.fn.popover.call(jQueryMock),expect(Popover.getInstance(t)).not.toBeNull()})),it("should create a popover with a config object",(()=>{e.innerHTML='<a href="#" title="Popover">BS twitter</a>';const t=e.querySelector("a");jQueryMock.fn.popover=Popover.jQueryInterface,jQueryMock.elements=[t],jQueryMock.fn.popover.call(jQueryMock,{content:"Popover content"}),expect(Popover.getInstance(t)).not.toBeNull()})),it("should not re create a popover",(()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a"),o=new Popover(t);jQueryMock.fn.popover=Popover.jQueryInterface,jQueryMock.elements=[t],jQueryMock.fn.popover.call(jQueryMock),expect(Popover.getInstance(t)).toEqual(o)})),it("should throw error on undefined method",(()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a"),o="undefinedMethod";jQueryMock.fn.popover=Popover.jQueryInterface,jQueryMock.elements=[t],expect((()=>{jQueryMock.fn.popover.call(jQueryMock,o)})).toThrowError(TypeError,`No method named "${o}"`)})),it("should should call show method",(()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a"),o=new Popover(t);jQueryMock.fn.popover=Popover.jQueryInterface,jQueryMock.elements=[t];const r=spyOn(o,"show");jQueryMock.fn.popover.call(jQueryMock,"show"),expect(r).toHaveBeenCalled()}))})),describe("getInstance",(()=>{it("should return popover instance",(()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a"),o=new Popover(t);expect(Popover.getInstance(t)).toEqual(o),expect(Popover.getInstance(t)).toBeInstanceOf(Popover)})),it("should return null when there is no popover instance",(()=>{e.innerHTML='<a href="#" title="Popover" data-bs-content="https://twitter.com/getbootstrap">BS twitter</a>';const t=e.querySelector("a");expect(Popover.getInstance(t)).toBeNull()}))})),describe("getOrCreateInstance",(()=>{it("should return popover instance",(()=>{e.innerHTML="<div></div>";const t=e.querySelector("div"),o=new Popover(t);expect(Popover.getOrCreateInstance(t)).toEqual(o),expect(Popover.getInstance(t)).toEqual(Popover.getOrCreateInstance(t,{})),expect(Popover.getOrCreateInstance(t)).toBeInstanceOf(Popover)})),it("should return new instance when there is no popover instance",(()=>{e.innerHTML="<div></div>";const t=e.querySelector("div");expect(Popover.getInstance(t)).toBeNull(),expect(Popover.getOrCreateInstance(t)).toBeInstanceOf(Popover)})),it("should return new instance when there is no popover instance with given configuration",(()=>{e.innerHTML="<div></div>";const t=e.querySelector("div");expect(Popover.getInstance(t)).toBeNull();const o=Popover.getOrCreateInstance(t,{placement:"top"});expect(o).toBeInstanceOf(Popover),expect(o._config.placement).toEqual("top")})),it("should return the instance when exists without given configuration",(()=>{e.innerHTML="<div></div>";const t=e.querySelector("div"),o=new Popover(t,{placement:"top"});expect(Popover.getInstance(t)).toEqual(o);const r=Popover.getOrCreateInstance(t,{placement:"bottom"});expect(o).toBeInstanceOf(Popover),expect(r).toEqual(o),expect(r._config.placement).toEqual("top")}))}))}));