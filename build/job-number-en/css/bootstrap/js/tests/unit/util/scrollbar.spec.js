import{clearBodyAndDocument,clearFixture,getFixture}from"../../helpers/fixture";import Manipulator from"../../../src/dom/manipulator";import ScrollBarHelper from"../../../src/util/scrollbar";describe("ScrollBar",(()=>{let e;const t=document.documentElement,o=e=>Number.parseInt(e,10),i=e=>o(window.getComputedStyle(e).paddingRight),l=e=>o(window.getComputedStyle(e).marginRight),d=e=>e.style.overflow,n=e=>Manipulator.getDataAttribute(e,"padding-right"),r=e=>Manipulator.getDataAttribute(e,"margin-right"),c=e=>Manipulator.getDataAttribute(e,"overflow"),s=()=>{const e=document.documentElement.clientWidth,t=document.documentElement.offsetWidth,o=(document.body.clientWidth,document.documentElement.getBoundingClientRect().width,document.body.getBoundingClientRect().width,window.innerWidth);Math.abs(window.innerWidth-document.documentElement.clientWidth);return e===t&&e===o};beforeAll((()=>{e=getFixture(),e.removeAttribute("style")})),afterAll((()=>{e.remove()})),afterEach((()=>{clearFixture(),clearBodyAndDocument()})),beforeEach((()=>{clearBodyAndDocument()})),describe("isBodyOverflowing",(()=>{it("should return true if body is overflowing",(()=>{document.documentElement.style.overflowY="scroll",document.body.style.overflowY="scroll",e.innerHTML='<div style="height: 110vh; width: 100%"></div>';const t=(new ScrollBarHelper).isOverflowing();s()?expect(t).toBeFalse():expect(t).toBeTrue()})),it("should return false if body is not overflowing",(()=>{t.style.overflowY="hidden",document.body.style.overflowY="hidden",e.innerHTML='<div style="height: 110vh; width: 100%"></div>';const o=(new ScrollBarHelper).isOverflowing();expect(o).toBeFalse()}))})),describe("getWidth",(()=>{it("should return an integer greater than zero, if body is overflowing",(()=>{t.style.overflowY="scroll",document.body.style.overflowY="scroll",e.innerHTML='<div style="height: 110vh; width: 100%"></div>';const o=(new ScrollBarHelper).getWidth();s()?expect(o).toEqual(0):expect(o).toBeGreaterThan(1)})),it("should return 0 if body is not overflowing",(()=>{document.documentElement.style.overflowY="hidden",document.body.style.overflowY="hidden",e.innerHTML='<div style="height: 110vh; width: 100%"></div>';const t=(new ScrollBarHelper).getWidth();expect(t).toEqual(0)}))})),describe("hide - reset",(()=>{it("should adjust the inline padding of fixed elements which are full-width",(()=>{e.innerHTML=['<div style="height: 110vh; width: 100%">','  <div class="fixed-top" id="fixed1" style="padding-right: 0px; width: 100vw"></div>','  <div class="fixed-top" id="fixed2" style="padding-right: 5px; width: 100vw"></div>',"</div>"].join(""),t.style.overflowY="scroll";const o=e.querySelector("#fixed1"),l=e.querySelector("#fixed2"),d=i(o),r=i(l),c=new ScrollBarHelper,s=d+c.getWidth(),a=r+c.getWidth();c.hide();let u=i(o),h=i(l);expect(n(o)).toEqual(`${d}px`),expect(n(l)).toEqual(`${r}px`),expect(u).toEqual(s),expect(h).toEqual(a),c.reset(),u=i(o),h=i(l),expect(n(o)).toBeNull(),expect(n(l)).toBeNull(),expect(u).toEqual(d),expect(h).toEqual(r)})),it("should remove padding & margin if not existed before adjustment",(()=>{e.innerHTML=['<div style="height: 110vh; width: 100%">','  <div class="fixed" id="fixed" style="width: 100vw;"></div>','  <div class="sticky-top" id="sticky" style=" width: 100vw;"></div>',"</div>"].join(""),t.style.overflowY="scroll";const o=e.querySelector("#fixed"),i=e.querySelector("#sticky"),l=new ScrollBarHelper;l.hide(),l.reset(),expect(o.getAttribute("style").includes("padding-right")).toBeFalse(),expect(i.getAttribute("style").includes("margin-right")).toBeFalse()})),it("should adjust the inline margin and padding of sticky elements",(()=>{e.innerHTML=['<div style="height: 110vh">','  <div class="sticky-top" style="margin-right: 10px; padding-right: 20px; width: 100vw; height: 10px"></div>',"</div>"].join(""),t.style.overflowY="scroll";const o=e.querySelector(".sticky-top"),d=l(o),c=i(o),s=new ScrollBarHelper,a=d-s.getWidth(),u=c+s.getWidth();s.hide(),expect(r(o)).toEqual(`${d}px`),expect(l(o)).toEqual(a),expect(n(o)).toEqual(`${c}px`),expect(i(o)).toEqual(u),s.reset(),expect(r(o)).toBeNull(),expect(l(o)).toEqual(d),expect(n(o)).toBeNull(),expect(i(o)).toEqual(c)})),it("should not adjust the inline margin and padding of sticky and fixed elements when element do not have full width",(()=>{e.innerHTML='<div class="sticky-top" style="margin-right: 0px; padding-right: 0px; width: 50vw"></div>';const t=e.querySelector(".sticky-top"),o=l(t),d=i(t),n=new ScrollBarHelper;n.hide();const r=l(t),c=i(t);expect(r).toEqual(o),expect(c).toEqual(d),n.reset()})),it("should not put data-attribute if element doesn't have the proper style property, should just remove style property if element didn't had one",(()=>{e.innerHTML=['<div style="height: 110vh; width: 100%">','  <div class="sticky-top" id="sticky" style="width: 100vw"></div>',"</div>"].join(""),document.body.style.overflowY="scroll";const t=new ScrollBarHelper,o=e.querySelector("#sticky"),d=i(o),n=l(o),r=t.getWidth();t.hide(),expect(i(o)).toEqual(r+d);const c=r+n;var s;expect(l(o)).toEqual(0===c?c:-c),expect((s=o,s.hasAttribute("data-bs-margin-right"))).toBeFalse(),expect((e=>e.hasAttribute("data-bs-padding-right"))(o)).toBeFalse(),t.reset(),expect(i(o)).toEqual(d),expect(i(o)).toEqual(d)})),describe("Body Handling",(()=>{it("should ignore other inline styles when trying to restore body defaults ",(()=>{document.body.style.color="red";const e=new ScrollBarHelper,t=e.getWidth();e.hide(),expect(i(document.body)).toEqual(t),expect(document.body.style.color).toEqual("red"),e.reset()})),it("should hide scrollbar and reset it to its initial value",(()=>{e.innerHTML=["<style>","  body {","    padding-right: 7px","  }","</style>"].join("");const t=document.body,l="10px";t.style.paddingRight=l;const r=i(t);expect(r).toEqual(o(l));const s="auto";t.style.overflow=s;const a=new ScrollBarHelper,u=a.getWidth();a.hide();const h=i(t);expect(h).toEqual(u+r),expect(h).toEqual(u+o(l)),expect(n(t)).toEqual(l),expect(d(t)).toEqual("hidden"),expect(c(t)).toEqual(s),a.reset();const p=i(t);expect(p).toEqual(r),expect(n(t)).toBeNull(),expect(d(t)).toEqual(s),expect(c(t)).toBeNull()})),it("should hide scrollbar and reset it to its initial value - respecting css rules",(()=>{e.innerHTML=["<style>","  body {","    padding-right: 7px","  }","</style>"].join("");const t=document.body,l=i(t),r="scroll";t.style.overflow=r;const s=new ScrollBarHelper,a=s.getWidth();s.hide();const u=i(t);expect(u).toEqual(a+l),expect(u).toEqual(a+o("7px")),expect(n(t)).toBeNull(),expect(d(t)).toEqual("hidden"),expect(c(t)).toEqual(r),s.reset();const h=i(t);expect(h).toEqual(l),expect(n(t)).toBeNull(),expect(d(t)).toEqual(r),expect(c(t)).toBeNull()})),it("should not adjust the inline body padding when it does not overflow",(()=>{const e=i(document.body),o=new ScrollBarHelper;t.style.overflowY="hidden",t.style.paddingRight="0px",o.hide();const l=i(document.body);expect(l).toEqual(e),o.reset()})),it("should not adjust the inline body padding when it does not overflow, even on a scaled display",(()=>{const e=i(document.body),o=new ScrollBarHelper;document.body.style.margin="0",t.style.overflowY="hidden",t.style.paddingRight=".48px",o.hide();const l=i(document.body);expect(l).toEqual(e),o.reset()}))}))}))}));